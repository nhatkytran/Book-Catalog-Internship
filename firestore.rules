rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    match /books/{document=**} {
      allow read: if true;
      allow delete: if request.auth != null;
      allow create, update: if request.auth != null && isValidBook(request.resource.data);

      function isValidBook(data) {
        return data.keys().hasAll(['name']) &&
        			 isValidName(data.name) &&
               hasAtLeastOneAuthor(data.authors) &&
               isValidPublicationYear(data) &&
               isValidRating(data);
      }

      function isValidName(name) {
        return name.size() >= 1 && name.size() <= 100;
      }

      function hasAtLeastOneAuthor(authors) {
        return authors.size() > 0;
      }
    
      function isValidPublicationYear(data) {
      	let publicationYear = data.get('publicationYear', null);
        return publicationYear == null || publicationYear > 1800;
      }
      
      function isValidRating(data) {
      	let rating = data.get('rating', null);
        return rating == null || rating is int && rating >= 0 && rating <= 10;
      }
    }
  }
}